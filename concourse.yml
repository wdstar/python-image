---
# Concourse pipeline: python-image
#   $ fly -t target sp -p python-image -c concourse.yml -l fly-vars.yml -l ~/sec/credentials-prod.yml
resources:
- name: src-git
  type: git
  source:
    uri: https://github.com/wdstar/python-image
    branch: master
- name: base-image
  type: docker-image
  source:
    repository: alpine
    tag: latest
    registry_mirror: https://((registry-mirror-domain))
      # e.g. https://registry.docker.example.com:5000
    ca_certs:
    - domain: ((registry-mirror-domain))
      # e.g. registry.docker.example.com:5000
      cert: ((docker-reg-ca-cert))
  check_every: 1h
- name: docker-reg
  type: docker-image
  source:
    repository: ((docker-id))/((name))
    #tag: latest
    username: ((docker-id))
    password: ((docker-pw))
  check_every: 12h

jobs:
- name: build-img
  plan:
  - aggregate:
    - get: src-git
      params:
        depth: 5
      trigger: false
    - get: base-image
      #params:
      #  skip_download: true
      trigger: true
  - task: put-python-ver
    image: base-image
    config:
      platform: linux
      outputs:
      - name: python-on-image
      run:
        path: sh
        args:
        - -c
        - |
          apk update
          apk add python2 python3
          python2 -c 'import platform; print(platform.python_version())' > python-on-image/ver2
          python3 -c 'import platform; print(platform.python_version())' > python-on-image/ver3
          cat python-on-image/ver2
          cat python-on-image/ver3
  - put: docker-reg
    params:
      build: src-git
      build_args_file: src-git/build-args2.json
      tag: python-on-image/ver2
      #tag_as_latest: true
    get_params:
      skip_download: true
  - put: docker-reg
    params:
      build: src-git
      build_args_file: src-git/build-args3.json
      tag: python-on-image/ver3
      tag_as_latest: true
    get_params:
      skip_download: true
- name: test-img
  plan:
  - get: docker-reg
    trigger: true
  - task: echo-perl-ver
    image: docker-reg
    config:
      platform: linux
      run:
        path: sh
        args:
        - -c
        - |
          python -V
